cassandra.default {
  ## list the contact points  here
  contact-points = [${?CLUSTER_IP}]
  ## override Lagomâ€™s ServiceLocator-based ConfigSessionProvider
  session-provider = akka.persistence.cassandra.ConfigSessionProvider
}

cassandra-journal {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

cassandra-snapshot-store {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.persistence.read-side.cassandra {
  contact-points = ${cassandra.default.contact-points}
  session-provider = ${cassandra.default.session-provider}
}

lagom.circuit-breaker.default.call-timeout = 5s

play.application.loader = WebGatewayLoader

play.http.secret.key = "somesecret"

badnames = ["Unstoppable"]

play.http {
  errorHandler = "utils.ErrorHandler"
  filters = "utils.Filters"
}

play.mailer {
  host=smtp.gmail.com
  port=576
  user="upijcy@gmail.com"
  password=3chili94
  ssl=false
  tls=true
  mock=true
  from="upijcy@gmail.com"
}

silhouette {
  authenticator {
    cookieName="id"
    cookiePath="/"
    secureCookie=false # Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
    httpOnlyCookie=true
    useFingerprinting=true
    authenticatorIdleTimeout=30 minutes
    authenticatorExpiry=12 hours

    rememberMe {
      cookieMaxAge=30 days
      authenticatorIdleTimeout=5 days
      authenticatorExpiry=30 days
    }

    cookie.signer {
      key = "[changeme]" # A unique encryption key
      pepper = "-mohiva-silhouette-cookie-signer-" # Constant prepended and appended to the data before signing. When using one key for multiple purposes, using a specific pepper reduces some risks arising from this.
    }
    crypter.key = "[changeme]" # A unique encryption key
  }
}
play.assets.checkForMinified = false

akka {
  remote.netty.tcp {
    port = 2553
  }
}